{"version":3,"sources":["logo.svg","components/uploadImage.jsx","App.js","reportWebVitals.js","index.js"],"names":["UploadImage","state","selectedImage","image","memeURL","selectImage","e","console","log","target","files","setState","URL","createObjectURL","uploadSelectedImage","action","method","enctype","type","onChange","this","name","placeholder","src","className","alt","Component","App","React","useState","data","setData","useEffect","fetch","then","res","json","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAAe,I,oDCqEAA,E,4MAhEXC,MAAQ,CACJC,cAAe,KACfC,MAAO,KACPC,QAAS,M,EAGbC,YAAc,SAACC,GACXC,QAAQC,IAAI,qBACZD,QAAQC,IAAIF,EAAEG,OAAOC,MAAM,IAC3B,EAAKC,SAAS,CACVT,cAAeI,EAAEG,OAAOC,MAAM,GAC9BP,MAAOS,IAAIC,gBAAgBP,EAAEG,OAAOC,MAAM,O,EAKlDI,oBAAsB,SAACR,K,4CA2BvB,WACI,OACI,gCACI,uBAAMS,OAAO,UAAUC,OAAO,OAAOC,QAAQ,sBAA7C,UACI,uBAAOC,KAAK,OAAOC,SAAUC,KAAKf,YAAagB,KAAK,cACpD,uBAAOH,KAAK,OAAOG,KAAK,UAAUC,YAAc,aAChD,uBAAOJ,KAAK,OAAOG,KAAK,aAAaC,YAAY,gBACjD,+CAEJ,8BACI,qBAAKC,IAAKH,KAAKnB,MAAMC,cAAgBkB,KAAKnB,MAAME,MAAO,KAAMqB,UAAU,qBAAqBC,IAAI,kB,GAtD1FC,aCuBXC,MAtBf,WAAgB,IAAD,EACaC,IAAMC,SAAS,MAD5B,mBACJC,EADI,KACEC,EADF,KAWX,OANAH,IAAMI,WAAU,WACZC,MAAM,YACDC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACJ,GAAD,OAAUC,EAAQD,EAAKO,cAClC,IAGC,qBAAKb,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,qBAAKD,IAXF,6DAWeC,UAAU,qBAAqBC,IAAI,SACrD,4BAAKK,GAAO,eACZ,cAAC,EAAD,UCTDQ,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1e574773.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios'\r\n\r\nclass UploadImage extends Component {\r\n    state = {\r\n        selectedImage: null,\r\n        image: null,\r\n        memeURL: null\r\n    };\r\n\r\n    selectImage = (e) => {\r\n        console.log(\"IMAGE SELECTED!!!\")\r\n        console.log(e.target.files[0])\r\n        this.setState({\r\n            selectedImage: e.target.files[0],\r\n            image: URL.createObjectURL(e.target.files[0])\r\n        })\r\n\r\n    }\r\n\r\n    uploadSelectedImage = (e) => {\r\n\r\n        //axios.get(\"https://api.memegen.link/images/custom/_/my_background.png?background=http://www.gstatic.com/webp/gallery/1.png\")\r\n        //    .then(res => {\r\n        //        console.log(res)\r\n        //\r\n        //        this.setState({\r\n        //            memeURL: 'https://api.memegen.link/images/custom/_/my_background.png?background=${this.state.image}'\r\n        //        })\r\n        //\r\n        //    })\r\n\r\n        //axios.post(\"/upload\", {\r\n        //    imageData: this.state.selectedImage\r\n        //    })\r\n        //    .then(function (response) {\r\n        //        console.log(response);\r\n        //    })\r\n        //    .catch(function (error) {\r\n        //        console.log(error);\r\n        //    }\r\n        //)\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form action=\"/upload\" method=\"post\" enctype=\"multipart/form-data\">\r\n                    <input type=\"file\" onChange={this.selectImage} name=\"baseImage\" />\r\n                    <input type=\"text\" name=\"topText\" placeholder = \"Top Text\" />\r\n                    <input type=\"text\" name=\"buttomText\" placeholder=\"Buttom Text\" />\r\n                    <button>Submit</button>\r\n                </form>\r\n                <div>\r\n                    <img src={this.state.selectedImage ? this.state.image: null} className=\"meme-generator-gif\" alt=\"logo\" />\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default UploadImage;","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport UploadImage from \"./components/uploadImage\"\n\nfunction App() {\n    const [data, setData] = React.useState(null);\n\n    const gifURL = \"https://media.giphy.com/media/yjGdFXj16MHWtCh9aU/giphy.gif\"\n\n    React.useEffect(() => {\n        fetch(\"/message\")\n            .then((res) => res.json())\n            .then((data) => setData(data.message));\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={gifURL} className=\"meme-generator-gif\" alt=\"logo\" />\n                <p>{!data ? \"Loading...\" : data}</p>\n                <UploadImage/>\n            </header>\n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}